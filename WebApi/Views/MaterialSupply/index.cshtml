@{
    ViewData["Title"] = "Material Supply Management";
}

<div>
    <h2>Material Supply Management</h2>
</div>

<div>
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link @(ViewBag.ActiveTab == "#raw-materials-tab" ? "active" : "")" id="raw-materials-tab" data-bs-toggle="tab" data-bs-target="#raw-materials" type="button" role="tab" aria-controls="raw-materials" aria-selected="true">Raw Materials</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link @(ViewBag.ActiveTab == "#inventory-items-tab" ? "active" : "")" id="inventory-items-tab" data-bs-toggle="tab" data-bs-target="#inventory-items" type="button" role="tab" aria-controls="inventory-items" aria-selected="false">Inventory Items</button>
        </li>
    </ul>
    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade @(ViewBag.ActiveTab == "#raw-materials-tab" ? "show active" : "")" id="raw-materials" role="tabpanel" aria-labelledby="raw-materials-tab">
            <br/>
            <h3>Raw Materials</h3>
            @await Html.PartialAsync("AddRawMaterial")
            <table class="table">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Price per kg</th>
                    <th>Weight tons</th>
                    <th>Total price</th>
                    <th>Last update</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var rawMaterial in ViewBag.RawMaterials)
                {
                    <tr>
                        <td>@rawMaterial.Name</td>
                        <td>@rawMaterial.Type</td>
                        <td>@rawMaterial.PricePerKg</td>
                        <td>@rawMaterial.WeightTons</td>
                        <td>@rawMaterial.TotalPrice</td>
                        <td>@rawMaterial.LastUpdate</td>
                        <td>
                            <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editRawMaterialModal" onclick="populateEditRawMaterialModal('@rawMaterial.Name', '@rawMaterial.Type', '@rawMaterial.Description', '@rawMaterial.PricePerKg', '@rawMaterial.WeightTons')">Edit</button>
                            <form asp-action="DeleteRawMaterial" method="post" style="display:inline;">
                                <input type="hidden" name="name" value="@rawMaterial.Name"/>
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
        <div class="tab-pane fade @(ViewBag.ActiveTab == "#inventory-items-tab" ? "show active" : "")" id="inventory-items" role="tabpanel" aria-labelledby="inventory-items-tab">
            <br/>
            <h3>Inventory Items</h3>
            @await Html.PartialAsync("AddInventoryItem")
            <table class="table">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Number</th>
                    <th>Price</th>
                    <th>Total price</th>
                    <th>Manufacturer</th>
                    <th>Last update</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var inventoryItem in ViewBag.InventoryItems)
                {
                    <tr>
                        <td>@inventoryItem.Name</td>
                        <td>@inventoryItem.Type</td>
                        <td>@inventoryItem.Number</td>
                        <td>@inventoryItem.Price</td>
                        <td>@inventoryItem.TotalPrice</td>
                        <td>@inventoryItem.Manufacturer.Name</td>
                        <td>@inventoryItem.LastUpdate</td>
                        <td>
                            <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editInventoryItemModal" onclick="populateEditInventoryItemModal('@inventoryItem.Name', '@inventoryItem.Type', '@inventoryItem.Description', '@inventoryItem.Number', '@inventoryItem.Price', '@inventoryItem.Manufacturer.Name', '@inventoryItem.Manufacturer.Address')">Edit</button>
                            <form asp-action="DeleteInventoryItem" method="post" style="display:inline;">
                                <input type="hidden" name="name" value="@inventoryItem.Name"/>
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@await Html.PartialAsync("EditRawMaterial")
@await Html.PartialAsync("EditInventoryItem")

@section Scripts {
    <script src="~/lib/popperjs/popper.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function populateEditRawMaterialModal(name, type, description, pricePerKg, weightTons) {
            document.querySelector('#editRawMaterialModal input[name="Name"]').value = name;
            document.querySelector('#editRawMaterialModal input[name="Type"]').value = type;
            document.querySelector('#editRawMaterialModal textarea[name="Description"]').value = description;
            document.querySelector('#editRawMaterialModal input[name="PricePerKg"]').value = pricePerKg;
            document.querySelector('#editRawMaterialModal input[name="WeightTons"]').value = weightTons;
        }

        function populateEditInventoryItemModal(name, type, description, number, price, manufacturerName, manufacturerAddress) {
            document.querySelector('#editInventoryItemModal input[name="Name"]').value = name;
            document.querySelector('#editInventoryItemModal input[name="Type"]').value = type;
            document.querySelector('#editInventoryItemModal textarea[name="Description"]').value = description;
            document.querySelector('#editInventoryItemModal input[name="Number"]').value = number;
            document.querySelector('#editInventoryItemModal input[name="Price"]').value = price;
            document.querySelector('#editInventoryItemModal input[name="ManufacturerName"]').value = manufacturerName;
            document.querySelector('#editInventoryItemModal input[name="ManufacturerAddress"]').value = manufacturerAddress;
        }
    </script>
}